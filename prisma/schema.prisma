// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Karyawan {
  id                 Int                @id @default(autoincrement())
  address            String
  dob                DateTime
  name               String
  status             String
  created_at         DateTime           @default(now())
  deleted_at         DateTime?
  updated_at         DateTime           @updatedAt
  Rekening           Rekening[]
  id_karyawan_detail Int                @unique
  karyawanDetail     KaryawanDetail     @relation(fields: [id_karyawan_detail], references: [id], onDelete: Cascade, onUpdate: Cascade)
  KaryawanTraining   KaryawanTraining[]
}

model Rekening {
  id             Int       @id @default(autoincrement())
  nama           String
  nomor          String
  jenis          String
  created_at     DateTime  @default(now())
  deleted_at     DateTime?
  updated_at     DateTime  @updatedAt
  id_karyawan    Int
  karyawanDetail Karyawan  @relation(fields: [id_karyawan], references: [id])
}

model KaryawanDetail {
  id         Int       @id @default(autoincrement())
  nik        String
  npwp       String
  created_at DateTime  @default(now())
  deleted_at DateTime?
  updated_at DateTime  @updatedAt
  Karyawan   Karyawan?
}

model KaryawanTraining {
  id          Int       @id @default(autoincrement())
  id_karyawan Int
  id_training Int
  created_at  DateTime  @default(now())
  deleted_at  DateTime?
  updated_at  DateTime  @updatedAt
  Karyawan    Karyawan  @relation(fields: [id_karyawan], references: [id])
  Training    Training  @relation(fields: [id_training], references: [id])
}

model Training {
  id               Int                @id @default(autoincrement())
  pengajar         String
  tema             String
  created_at       DateTime           @default(now())
  deleted_at       DateTime?
  updated_at       DateTime           @updatedAt
  KaryawanTraining KaryawanTraining[]
}

model User {
  id         String    @id @unique @default(uuid())
  name       String
  email      String    @unique
  password   String
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  deleted_at DateTime?
}
